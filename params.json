{
  "name": "p_slides",
  "tagline": "dead simple way to create semantic, nice to look at slides - without any dependencies",
  "body": "# p_slides\r\n## dead simple way to create semantic, nice to look at slides\r\n\r\n  * forget about styling, only think about content\r\n  * p_slides is static files only, it doesn't need a server, installed\r\n    software, pre-compilation or a special editor (unless of course\r\n    *your* favorite and very special editor!)\r\n  * for editing and presenting, there are no external dependencies -\r\n    it's just a html file (therefore it can easily be put into version\r\n    control for example)\r\n  * it's extendable and supports themes(see section \"extensibility\" for details)\r\n  * write markdown (uses [remarkable.js](https://github.com/jonschlinkert/remarkable))\r\n  * slides are automatically styled nicely (uses [twitter bootstrap](http://twitter.github.com/bootstrap/))\r\n  * code samples are syntactically highlighted (uses [jquery syntax](https://github.com/ioquatix/jquery-syntax))\r\n  * generates nice slides in the browser (uses [slidy2](http://www.w3.org/Talks/Tools/Slidy2/))\r\n    * use arrow keys to navigate\r\n    * use the generated 'table of contents' for quick navigation\r\n    * supports printing to pdf (see [presentation.pdf](https://cdn.rawgit.com/munen/p_slides/0.1.2/build/presentation.pdf))\r\n    * every slide has a unique url for easy sharing\r\n    * supports having a timer in the presentation (see meta[name=\"duration\"] element in presentation.html\r\n      * use an empty first slide if you don't want the timer to start\r\n        automatically\r\n\r\n# demo\r\n\r\n* open the [demo presentation.html](http://cdn.rawgit.com/munen/p_slides/0.1.2/themes/zhaw/example_presentation.html) in your favourite browser\r\n  * tested in current versions of chrome/safari/ff\r\n* print the document to pdf if you need to\r\n * slides will automatically get separated into pages\r\n\r\n# usage\r\n\r\n* edit the [kickstart presentation.html](presentation.html) to create your content\r\n  * use [markdown syntax](http://daringfireball.net/projects/markdown/syntax)\r\n  * supports tables with [Github flavored markdown syntax](https://help.github.com/articles/organizing-information-with-tables/)\r\n  * create page breaks using '---'\r\n\r\n# syntax highlighting\r\n\r\n* write your code in &lt;pre&gt; tags\r\n* annotate the given language using a css class\r\n\r\n## example code\r\n<pre>\r\n&lt;pre class=\"syntax c\"&gt;\r\nstatic int foo;\r\nvoid bar(void) {\r\n    foo = 0;\r\n    while (foo != 255) ; }\r\n&lt;/pre&gt;\r\n</pre>\r\n\r\n## becomes\r\n```c\r\nstatic int foo;\r\nvoid bar(void) {\r\n    foo = 0;\r\n    while (foo != 255) ; }\r\n```\r\n\r\n# syntax highlighting\r\n\r\n* if you want to syntax highlight *all* your code in the same way\r\n  then you can uncomment and customize the following line at the\r\n  bottom of the presentation.html file:\r\n\r\n<pre>\r\n$('pre &gt; code').parent().addClass(\"syntax cpp\");\r\n</pre>\r\n\r\n# extensibility\r\n\r\n* p_slides supports themes\r\n* see\r\n  * [example presentation](http://cdn.rawgit.com/munen/p_slides/0.1.2/themes/zhaw/example_presentation.html)\r\n     * All links within this example are linking to cdn.rawgit.com to\r\n       enable immediate preview from Github. When you're building your\r\n       own presentation, you can use the\r\n       [kickstart presentation.html](presentation.html) which refers\r\n       to local assets.\r\n  * [example presentation pdf](https://cdn.rawgit.com/munen/p_slides/0.1.2/themes/zhaw/zhaw_presentation.pdf)\r\n  * [zhaw theme](https://cdn.rawgit.com/munen/p_slides/tree/0.1.2/themes/zhaw)\r\n\r\n---\r\n\r\n# rationale\r\n\r\n* Five years ago I became a lecturer at the Zurich University of\r\n  applied Sciences\r\n* With this, I was tasked with creating great lectures with good\r\n  presentations and labs\r\n* Looking at the landscape of the popular tools out there, I saw that\r\n  most people are doing WYSIWYG - however, I knew that this was going\r\n  to be a waste of time (I'm not going into this generic argument\r\n  here, if you don't agree, that's absolutely ok)\r\n* I wanted a tool that\r\n  * works well cross-platform\r\n  * works well with version control\r\n  * uses a succinct and well-known markup language (markdown, org-mode, ...)\r\n  * has no dependencies to install for other lecturers\r\n  * allows for demos in the browser with distribution via PDF\r\n  * allows editing with a regular text editor (for me that was VIM for\r\n    well over a decade, now it's Emacs), because this yields the\r\n    greatest typing efficiency\r\n* There was no such thing in 2011, so I created p_slides\r\n* To this day p_slides prevails with regard to the above list\r\n  * There are a lot of other tools out there, but as far as I know,\r\n    they all fail one of the above criteria.\r\n\r\n# p_slides design decisions\r\n\r\n* a p_slide presentation is only a static file that you can put into\r\n  version control and work on collaboratively with your peers\r\n* p_slides is explicitly dumb\r\n  * it has no requirements to install additional software, pre-compile\r\n    anything or run a server\r\n  * therefore it is completely self-contained/self-hosted and doesn't\r\n    require any complications for less technical users\r\n    * no usage of the command-line is required (no ruby, node, npm,\r\n      browserify, gulp, babel, ...)\r\n    * no compilation step is required\r\n    * no hosting solution is preferred, not even Github Pages\r\n\r\n# difference to reveal-js (and other popular options)\r\n\r\n* Out of the box reveal-js does not support Markdown Slides. Yes, of\r\n  course they do, but you'll have to write HTML per slide and then\r\n  embed Markdown. With p_slides, you'll write your markdown directly\r\n  inline - no HTML cruft where it doesn't add benefit.\r\n\r\n* reveal-js is _much_ bigger whereas p_slides relies on well tested\r\n  and established software. For example many features that you can\r\n  find on the reveal-js README are also included in p_slides, because\r\n  it uses W3Org slidy2. p_slides actually is only very little code\r\n  itself as it glues together very well established and good existing\r\n  libraries. reveal-js does a lot by itself. Both options are valid,\r\n  yet they are different(;\r\n\r\n\r\n\r\n\r\n# editing tips\r\nWith p_slides you are completely free to use your favorite Editor -\r\nthat might be Atom, Visual Studio Code, Notepad++ or anything\r\nreally. All of them have good markdown integration - for some of them\r\nplease find the documentation directly here:\r\n## Emacs\r\nFor Emacs, there is a great\r\n[markdown-mode](http://jblevins.org/projects/markdown-mode/). With\r\nthis snippet in your `init.el`, you can automatically enable it. The\r\nsnippet also shows how to enable automatic spell checking with [flyspell-mode](https://ftp.gnu.org/old-gnu/Manuals/emacs-20.7/html_node/emacs_97.html).\r\n```elisp\r\n(add-to-list 'auto-mode-alist '(\"presentation.html\" . markdown-mode))\r\n;; If you are into spell-checking\r\n(add-hook 'markdown-mode-hook 'flyspell-mode)\r\n```\r\n## VIM\r\nIf you want VIM to automatically use Tim Popes great\r\n[markdown plugin](https://github.com/tpope/vim-markdown), use this\r\nsnippet for VIM to automatically register the correct filetype - or\r\nwrite a better solutions and make me a Pull Request(;\r\n\r\n```VimL\r\nau! BufRead,BufNewFile *html,*htm call TestForPSlides()\r\n\"Check whether it is a p_slides presentation\r\nfunction TestForPSlides()\r\n  if match(join(getline(1,'$')), 'p_slides') > 0\r\n    set filetype=markdown\r\n  endif\r\nendfunction\r\n```\r\n\r\n---\r\n\r\n# development\r\n\r\n## upgrade\r\n\r\n* create a new tag\r\n* change cdn.rawgit.com links to assets (examples and README) to refer to new tag\r\n\r\n# contributors\r\n\r\n* Alain M Lafon ([github](https://github.com/munen))\r\n* Tomáš Pospíšek ([github](https://github.com/tpo))\r\n\r\n---\r\n\r\n# license\r\n\r\n| Library | License |\r\n| ------- | ------- |\r\n| [slidy2](http://www.w3.org/Talks/Tools/Slidy2/) | [W3C software license](http://www.w3.org/Consortium/Legal/copyright-software) |\r\n| [jquery-syntax](https://github.com/ioquatix/jquery-syntax) | MIT |\r\n| [bootstrap](https://github.com/twbs/bootstrap) | MIT |\r\n| [remarkable](https://github.com/jonschlinkert/remarkable) | MIT |\r\n\r\np_slides is licensed under the [GNU AGPL](LICENSE).\r\n",
  "google": "UA-60858136-3",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}